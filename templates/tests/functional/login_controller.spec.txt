// test/functional/login.spec.ts

import { test } from '@japa/runner'
import Route from '@ioc:Adonis/Core/Route'
import Routes from 'App/Config/RouteNames'
import User from 'App/Models/User'

const { login, home } = Routes
let user: User

test.group('LoginController', (group) => {
  group
    .setup(async () => {
      user = await User.create({
        username: 'johndoe',
        email: 'britzdylan@gmail.com',
        password: 'password123',
      })

      await user.save()
    })
    .teardown(async () => {
      await user.delete()
    })
  test('should render the login view', async ({ client }) => {
    const response = await client.get(Route.makeUrl(login.create))
    response.assertStatus(200)
    response.assertTextIncludes('<h1 class="text-xl font-bold mb-4">Login</h1>')
  })

  test('should handle login', async ({ client }) => {
    const response = await client.post(Route.makeUrl(login.store)).form({
      email: user.email,
      password: 'password123',
      password_confirmation: 'password123',
    })

    response.assertRedirectsTo(Route.makeUrl(home.index))
  })

  test('should handle logout', async ({ client }) => {
    const response = await client.post(Route.makeUrl(login.destroy))
    response.assertRedirectsTo(Route.makeUrl(login.create))
  })
})
