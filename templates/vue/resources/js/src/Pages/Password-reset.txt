<template>
  <section class="centered-content lg:max-w-sm gap-8">
    <Logo />
    <Card class="flex flex-col gap-4 w-full">
      <template #title> <h1>Forgot your password?</h1> </template>
      <template #subtitle>
        <p>Please enter your email address</p>
      </template>
      <template #content>
        <form class="flex flex-col gap-4 w-full" @submit.prevent="form.post(formUrl)">
          <FormInput
            v-model="form.email"
            placeholder="johndoe@example.com"
            id="email"
            type="email"
            srText="Please enter your email in order to reset your password"
            :validation="validation.email"
          />

          <Button
            :loading="form.processing"
            :disabled="form.processing"
            plain
            type="submit"
            label="Confirm email"
          />
        </form>
      </template>
      <template #footer>
        <Link class="link" href="/login">Back to login page</Link>
      </template>
    </Card>
  </section>
</template>

<script setup lang="ts">
import { computed } from 'vue'
import { useForm, usePage } from '@inertiajs/vue3'
import AuthLayout from 'Layouts/Auth.vue'
import Logo from 'Components/UI/Logo.vue'

defineOptions({
  layout: AuthLayout,
})

defineProps<{
  formUrl: string
}>()

const form = useForm({
  email: '',
})

const validation = computed(() => {
  const props = usePage<{
    error: {
      email: string[]
    }
  }>().props

  return {
    email: props.error?.email ? props.error.email.join(', ') : '',
  }
})
</script>
