<template>
  <form class="flex flex-col w-full gap-2 max-w-xl" @submit.prevent="form.put(formUrl)">
    <FormInput
      :validation="validation.currentPassword"
      label="Current Password"
      v-model="form.currentPassword"
      placeholder="********"
      id="currentPassword"
      type="password"
      srText="Enter your current password"
    />
    <FormInput
      :validation="validation.password"
      label="New Password"
      v-model="form.password"
      placeholder="********"
      id="password"
      type="password"
      srText="Enter your new password"
    />
    <FormInput
      :validation="validation.password_confirmation"
      label="Confirm Password"
      v-model="form.password_confirmation"
      placeholder="********"
      id="password_confirmation"
      type="password"
      srText="Confirm your new password"
    />
    <Button
      :loading="form.processing"
      :disabled="form.processing"
      plain
      type="submit"
      label="Save Changes"
      class="mt-2 w-max"
    />
  </form>
</template>

<script setup lang="ts">
import { useForm, usePage } from '@inertiajs/vue3'
import { computed } from 'vue'

defineProps<{
  name: string
  label: string
  formUrl: string

}>()

const form = useForm({
  currentPassword: '',
  password: '',
  password_confirmation: '',
})

const validation = computed(() => {
  const props = usePage<{
    error: {
      currentPassword: string[]
      password: string[]
      password_confirmation: string[]
    }
  }>().props

  return {
    currentPassword: props.error?.currentPassword ? props.error.currentPassword.join(', ') : '',
    password: props.error?.password ? props?.error.password.join(', ') : '',
    password_confirmation: props.error?.password_confirmation
      ? props.error.password_confirmation.join(', ')
      : '',
  }
})
</script>
