<template>
  <form class="flex flex-col w-full gap-2 max-w-xl" @submit.prevent="form.put(formUrl)">
    <FormInput
      :validation="validation.firstName"
      label="First Name"
      v-model="form.firstName"
      placeholder="John"
      id="first_name"
      type="text"
      srText="Enter your first name"
    />
    <FormInput
      :validation="validation.lastName"
      label="Last Name"
      v-model="form.lastName"
      placeholder="Doe"
      id="last_name"
      type="text"
      srText="Enter your last name"
    />
    <FormInput
      :validation="validation.email"
      label="Email"
      v-model="form.email"
      placeholder="johndoe@example.com"
      id="email"
      type="email"
      srText="Enter your preferred email address"
    />
    <Button
      :loading="form.processing"
      :disabled="form.processing"
      plain
      type="submit"
      label="Save Changes"
      class="mt-2 w-max"
    />
  </form>
</template>

<script setup lang="ts">
import { useForm, usePage } from '@inertiajs/vue3'
import { computed } from 'vue'

const props = defineProps<{
  name: string
  label: string
  formUrl: string
  profile: {
    first_name: string
    last_name: string
    avatar: string
  }
  user: {
    email: string
  }
}>()

const form = useForm({
  firstName: props.profile.first_name,
  lastName: props.profile.last_name,
  email: props.user.email,
})

const validation = computed(() => {
  const props = usePage<{
    error: {
      email: string[]
      firstName: string[]
      lastName: string[]
    }
  }>().props

  return {
    email: props.error?.email ? props.error.email.join(', ') : '',
    firstName: props.error?.firstName ? props?.error.firstName.join(', ') : '',
    lastName: props.error?.lastName ? props.error.lastName.join(', ') : '',
  }
})
</script>
